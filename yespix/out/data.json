{
    "project": {},
    "files": {
        "core.js": {
            "name": "core.js",
            "modules": {
                "core": 1,
                "entity": 1
            },
            "classes": {
                "core.ready": 1,
                "core.file": 1,
                "core.system": 1,
                "core.support": 1,
                "core.browser": 1,
                "core.entity": 1,
                "entity.base": 1,
                "entity.gfx": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "engine.js": {
            "name": "engine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "core": {
            "name": "core",
            "submodules": {},
            "classes": {
                "core.ready": 1,
                "core.file": 1,
                "core.system": 1,
                "core.support": 1,
                "core.browser": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "core.js",
            "line": 821
        },
        "entity": {
            "name": "entity",
            "submodules": {},
            "classes": {
                "core.entity": 1,
                "entity.base": 1,
                "entity.gfx": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "core.js",
            "line": 1394
        }
    },
    "classes": {
        "core.ready": {
            "name": "core.ready",
            "shortname": "core.ready",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "",
            "file": "core.js",
            "line": 29,
            "description": "***********************************************************************************************************"
        },
        "core.file": {
            "name": "core.file",
            "shortname": "core.file",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "",
            "file": "core.js",
            "line": 71,
            "description": "***********************************************************************************************************"
        },
        "core.system": {
            "name": "core.system",
            "shortname": "core.system",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "",
            "file": "core.js",
            "line": 508,
            "description": "***********************************************************************************************************"
        },
        "core.support": {
            "name": "core.support",
            "shortname": "core.support",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "",
            "file": "core.js",
            "line": 730,
            "description": "***********************************************************************************************************"
        },
        "core.browser": {
            "name": "core.browser",
            "shortname": "core.browser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core",
            "namespace": "",
            "file": "core.js",
            "line": 821,
            "description": "***********************************************************************************************************"
        },
        "core.entity": {
            "name": "core.entity",
            "shortname": "core.entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "entity",
            "namespace": "",
            "file": "core.js",
            "line": 938,
            "description": "***********************************************************************************************************"
        },
        "entity.base": {
            "name": "entity.base",
            "shortname": "entity.base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "entity",
            "namespace": "",
            "file": "core.js",
            "line": 1285,
            "description": "***********************************************************************************************************"
        },
        "entity.gfx": {
            "name": "entity.gfx",
            "shortname": "entity.gfx",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "entity",
            "namespace": "",
            "file": "core.js",
            "line": 1394
        }
    },
    "classitems": [
        {
            "file": "core.js",
            "line": 34,
            "description": "Is True when the yespix core is initiated and ready to do stuff",
            "itemtype": "property",
            "name": "isReady",
            "type": "boolean",
            "class": "core.ready",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 41,
            "itemtype": "property",
            "name": "readyList",
            "type": "array",
            "class": "core.ready",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 48,
            "description": "Add a function call to the ready event of the core or execute the ready state and clear the list",
            "itemtype": "method",
            "name": "ready",
            "exemple": "",
            "return": {
                "description": "true on success",
                "type": "Boolean"
            },
            "todo": [
                "ready must be triggered by the event system"
            ],
            "chainable": 1,
            "class": "core.ready",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 78,
            "description": "Load some files",
            "itemtype": "method",
            "name": "load",
            "class": "core.file",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 298,
            "description": "Load a js script file and execute it",
            "itemtype": "method",
            "name": "js",
            "params": [
                {
                    "name": "fileList",
                    "description": "Array of the script files to load",
                    "type": "Array|string"
                },
                {
                    "name": "complete",
                    "description": "Called when the load of the whole list is complete",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Called when a script load throw an error",
                    "type": "Function"
                }
            ],
            "use": "yespix.file.js(['file01.js', 'file02.js', 'file03.js'], { complete: ... , error: ... , useCache: false});",
            "class": "core.file",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 383,
            "description": "Load a css file and add it to the document",
            "itemtype": "method",
            "name": "css",
            "params": [
                {
                    "name": "list",
                    "description": "Array of the script files to load",
                    "type": "Array|string"
                },
                {
                    "name": "complete",
                    "description": "Called when the load of the whole list is complete",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Called when a script load throw an error",
                    "type": "Function"
                },
                {
                    "name": "progress",
                    "description": "Called on the progress of each script load",
                    "type": "Function"
                }
            ],
            "class": "core.file",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 439,
            "description": "Load and initialise the yespix core",
            "itemtype": "method",
            "name": "yploader",
            "params": [
                {
                    "name": "options",
                    "description": "namespace: string for the namespace <br/>\n\t\tdir_resources: directory of the resources <br/>\n\t\tdir_engine: directory of the engine <br/>\n\t\tdir_modules: directory of the modules <br/>\n\t\tmodules: list of modules of script files to load <br/>\n\t\tinit: function to call when the core is initiated <br/>\n\t\tdebug: if True, log some debug informations <br/>",
                    "type": "Object"
                }
            ],
            "class": "core.file",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 513,
            "itemtype": "method",
            "name": "clone",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 525,
            "itemtype": "method",
            "name": "unique",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 539,
            "itemtype": "method",
            "name": "getExtension",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 549,
            "itemtype": "method",
            "name": "getFilename",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 557,
            "itemtype": "method",
            "name": "getDir",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 566,
            "itemtype": "method",
            "name": "getNoExtension",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 576,
            "itemtype": "method",
            "name": "isInt",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 586,
            "itemtype": "method",
            "name": "isArray",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 594,
            "itemtype": "method",
            "name": "isUndefined",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 602,
            "itemtype": "method",
            "name": "isString",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 610,
            "itemtype": "method",
            "name": "isFunction",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 618,
            "itemtype": "method",
            "name": "isObject",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 626,
            "itemtype": "method",
            "name": "pLength",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 641,
            "description": "Check if the value is in an array",
            "params": [
                {
                    "name": "arr",
                    "description": "The array to check"
                }
            ],
            "return": {
                "description": "True if the value is in the array",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "dump",
            "type": "!~YUIDOC_LINE~!\t\treturn (arr.indexOf(value) != -1);!~YUIDOC_LINE~!",
            "class": "core.system",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 735,
            "itemtype": "method",
            "name": "support\nMedia support detection. The function yespix.support(type) return true if the requested audio or video is supported",
            "example": [
                " support('audio') detects if audio is supported",
                " support('.mp3') detects if mp3 extension is supported, assuming \".mp3\" file has an audio/mpeg mimetype",
                " support('audio/wav') detects if mimetype audio/wav is supported",
                " support('audio/ogg; codecs=\"vorbis\"') detects if mimetype audio/ogg is supported with codec Vorbis. Note: Some browsers are completely ignoring the codecs and always return the same thing\n"
            ],
            "class": "core.support",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 840,
            "internal": "",
            "class": "core.browser",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 946,
            "class": "core.entity",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 979,
            "description": "Returns multiple entities",
            "class": "core.entity",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 1188,
            "description": "Return True if the entity name have a defined class",
            "itemtype": "method",
            "name": "isDefined",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the entity class",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the entity classname exists",
                "type": "Boolean"
            },
            "class": "core.entity",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 1199,
            "description": "Returns True if the entity possesses all the ancestors",
            "itemtype": "method",
            "name": "hasAncestors",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the entity",
                    "type": "String"
                },
                {
                    "name": "ancestors",
                    "description": "A string or an array of ancestor names",
                    "type": "Array|string"
                }
            ],
            "class": "core.entity",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 1214,
            "description": "Call some functions of the entity ancestors of an entity",
            "params": [
                {
                    "name": "entity",
                    "description": "Entity instance",
                    "type": "Object"
                },
                {
                    "name": "fn",
                    "description": "Function name to call",
                    "type": "String"
                },
                {
                    "name": "ancestors",
                    "description": "String of ancestor names (separated with \",\") on which the function will be called",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Parameters of the function call",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Array of objects that gives the detailed results of each function",
                "type": "Array"
            },
            "example": [
                " call(entity, 'test') // call \"test\" function on every ancestors of the entity",
                " call(entity, 'test', [1,2,3]) // call \"test\" function on every ancestors of the entity with parameters 1, 2 and 3",
                " call(entity, 'test', 'a, b, c') // call \"test\" function on ancestors \"a\", \"b\" and \"c\"",
                " call(entity, 'test', 'a, b', [1, 2]) // call \"test\" function on ancestors \"a\" and \"b\" with parameters 1 and 2"
            ],
            "class": "core.entity",
            "module": "core"
        },
        {
            "file": "core.js",
            "line": 1292,
            "description": "Entity class name initiated on the spawn of the entity",
            "itemtype": "property",
            "name": "_class",
            "type": "string",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1299,
            "description": "Array of ancestor names as strings initiated on the spawn of the entity",
            "itemtype": "property",
            "name": "_ancestors",
            "type": "array",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1306,
            "description": "Reference to the scene of the entity initiated by the scene entity",
            "itemtype": "property",
            "name": "_scene",
            "type": "object",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1313,
            "description": "Set True if the entity is active",
            "itemtype": "property",
            "name": "isActive",
            "type": "boolean",
            "default": "true",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1321,
            "description": "Set True if the entity is visible",
            "itemtype": "property",
            "name": "isVisible",
            "type": "boolean",
            "default": "false",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1329,
            "description": "Set True if the entity is global",
            "itemtype": "property",
            "name": "isGlobal",
            "type": "boolean",
            "default": "false",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1337,
            "description": "Unique name of the entity instance",
            "itemtype": "property",
            "name": "name",
            "type": "string",
            "default": "\"entity\" + entity.id",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1345,
            "description": "Unique integer of the entity instance",
            "itemtype": "property",
            "name": "id",
            "type": "integer",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1355,
            "description": "Return the array of assets used for the entity",
            "sync": "",
            "class": "entity.base",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1430,
            "params": [
                {
                    "name": "dir",
                    "description": "- Direction to move (n,s,e,w,ne,nw,se,sw)"
                },
                {
                    "name": "by",
                    "description": "- Amount to move in the specified direction\nQuick method to move the entity in a direction (n, s, e, w, ne, nw, se, sw) by an amount of pixels."
                }
            ],
            "chainable": 1,
            "class": "entity.gfx",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1445,
            "params": [
                {
                    "name": "x",
                    "description": "- Amount to move X"
                },
                {
                    "name": "y",
                    "description": "- Amount to move Y"
                },
                {
                    "name": "w",
                    "description": "- Amount to widen"
                },
                {
                    "name": "h",
                    "description": "- Amount to increase height\nShift or move the entity by an amount. Use negative values\nfor an opposite direction."
                }
            ],
            "class": "entity.gfx",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1461,
            "description": "#.attach",
            "comp": "2D",
            "sign": "public this .attach(Entity obj[, .., Entity objN])",
            "params": [
                {
                    "name": "obj",
                    "description": "- Child entity(s) to attach\nSets one or more entities to be children, with the current entity (`this`)\nas the parent. When the parent moves or rotates, its children move or\nrotate by the same amount. (But not vice-versa: If you move a child, it\nwill not move the parent.) When the parent is destroyed, its children are\ndestroyed.\n\nFor any entity, `this._children` is the array of its children entity\nobjects (if any), and `this._parent` is its parent entity object (if any).\n\nAs many objects as wanted can be attached, and a hierarchy of objects is\npossible by attaching."
                }
            ],
            "class": "entity.gfx",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1490,
            "description": "#.detach",
            "comp": "2D",
            "sign": "public this .detach([Entity obj])",
            "params": [
                {
                    "name": "obj",
                    "description": "- The entity to detach. Left blank will remove all attached entities\nStop an entity from following the current entity. Passing no arguments will stop\nevery entity attached."
                }
            ],
            "class": "entity.gfx",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1519,
            "description": "#.origin",
            "comp": "2D",
            "sign": "public this .origin(String offset)",
            "params": [
                {
                    "name": "x",
                    "description": "- Pixel value of origin offset on the X axis"
                },
                {
                    "name": "y",
                    "description": "- Pixel value of origin offset on the Y axis"
                },
                {
                    "name": "offset",
                    "description": "- Combination of center, top, bottom, middle, left and right\nSet the origin point of an entity for it to rotate around."
                }
            ],
            "example": [
                "\n~~~\nthis.origin(\"top left\")\nthis.origin(\"center\")\nthis.origin(\"bottom right\")\nthis.origin(\"middle right\")\n~~~"
            ],
            "see": [
                ".rotation"
            ],
            "class": "entity.gfx",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1567,
            "description": "#.flip",
            "comp": "2D",
            "trigger": "Change - when the entity has flipped",
            "sign": "public this .flip(String dir)",
            "params": [
                {
                    "name": "dir",
                    "description": "- Flip direction\n\nFlip entity on passed direction"
                }
            ],
            "example": [
                "\n~~~\nthis.flip(\"X\")\n~~~"
            ],
            "class": "entity.gfx",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1593,
            "description": "ams_entity_object : abstract base entity with no visual",
            "class": "entity.gfx",
            "module": "entity"
        },
        {
            "file": "core.js",
            "line": 1640,
            "description": "returns a sound and executes a function on it",
            "itemtype": "method",
            "name": "sound",
            "example": [
                " sound() returns the first sound",
                " sound('test') returns the sound with name \"test\"",
                " sound('/play') plays the first sound and returns it",
                " sound('test/stop') stop the sound with name \"test\"",
                " sound(1) returns the sound at index 1 (index is from 0 to sounds.length-1)",
                " sound({name: 'test' }) returns the sound with name \"test\"",
                " sound({ volume: 0.7 }) return the first sound with volume set to 0.7"
            ],
            "class": "entity.gfx",
            "module": "entity"
        },
        {
            "file": "engine.js",
            "line": 7,
            "name": "core",
            "class": "",
            "module": "entity"
        },
        {
            "file": "engine.js",
            "line": 12,
            "class": "",
            "module": "entity"
        },
        {
            "file": "engine.js",
            "line": 29,
            "description": "Add a function call to the ready event of the core or execute the ready state",
            "itemtype": "method",
            "name": "ready",
            "memberof": "core",
            "exemple": "",
            "return": {
                "description": "true on success",
                "type": "Boolean"
            },
            "class": "",
            "module": "entity"
        },
        {
            "file": "engine.js",
            "line": 57,
            "name": "core.file",
            "class": "",
            "module": "entity"
        },
        {
            "file": "engine.js",
            "line": 62,
            "description": "Load a js script file",
            "itemtype": "method",
            "name": "loadjs",
            "memberof": "core.system",
            "params": [
                {
                    "name": "list",
                    "description": "Array of the script files to load",
                    "type": "Array|string"
                },
                {
                    "name": "complete",
                    "description": "Called when the load of the whole list is complete",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "Called when a script load throw an error",
                    "type": "Function"
                },
                {
                    "name": "progress",
                    "description": "Called on the progress of each script load",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "entity"
        },
        {
            "file": "engine.js",
            "line": 259,
            "class": "",
            "module": "entity"
        },
        {
            "file": "engine.js",
            "line": 356,
            "description": "Media support detection\n Function yespix.support(type) return true if the requested audio or video is supported",
            "use": "support('audio/ogg; codecs=\"vorbis\"') detects if mimetype audio/ogg is supported with codec Vorbis. Note: Some browsers are completely ignoring the codecs and always return the same thing",
            "class": "",
            "module": "entity"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:48"
        },
        {
            "message": "unknown tag: exemple",
            "line": " core.js:48"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:78"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:298"
        },
        {
            "message": "unknown tag: use",
            "line": " core.js:298"
        },
        {
            "message": "unknown tag: use",
            "line": " core.js:298"
        },
        {
            "message": "unknown tag: use",
            "line": " core.js:298"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:383"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:439"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:513"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:525"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:539"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:549"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:557"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:566"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:576"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:586"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:594"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:602"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:610"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:618"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:626"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:641"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:641"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:735"
        },
        {
            "message": "unknown tag: internal",
            "line": " core.js:840"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:1188"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:1199"
        },
        {
            "message": "unknown tag: sync",
            "line": " core.js:1355"
        },
        {
            "message": "unknown tag: comp",
            "line": " core.js:1461"
        },
        {
            "message": "unknown tag: sign",
            "line": " core.js:1461"
        },
        {
            "message": "unknown tag: comp",
            "line": " core.js:1490"
        },
        {
            "message": "unknown tag: sign",
            "line": " core.js:1490"
        },
        {
            "message": "unknown tag: comp",
            "line": " core.js:1519"
        },
        {
            "message": "unknown tag: sign",
            "line": " core.js:1519"
        },
        {
            "message": "unknown tag: sign",
            "line": " core.js:1519"
        },
        {
            "message": "unknown tag: comp",
            "line": " core.js:1567"
        },
        {
            "message": "unknown tag: trigger",
            "line": " core.js:1567"
        },
        {
            "message": "unknown tag: sign",
            "line": " core.js:1567"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " core.js:1640"
        },
        {
            "message": "unknown tag: name",
            "line": " engine.js:7"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " engine.js:29"
        },
        {
            "message": "unknown tag: name",
            "line": " engine.js:29"
        },
        {
            "message": "unknown tag: memberof",
            "line": " engine.js:29"
        },
        {
            "message": "unknown tag: exemple",
            "line": " engine.js:29"
        },
        {
            "message": "unknown tag: name",
            "line": " engine.js:57"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " engine.js:62"
        },
        {
            "message": "unknown tag: name",
            "line": " engine.js:62"
        },
        {
            "message": "unknown tag: memberof",
            "line": " engine.js:62"
        },
        {
            "message": "unknown tag: use",
            "line": " engine.js:356"
        },
        {
            "message": "unknown tag: use",
            "line": " engine.js:356"
        },
        {
            "message": "unknown tag: use",
            "line": " engine.js:356"
        },
        {
            "message": "unknown tag: use",
            "line": " engine.js:356"
        },
        {
            "message": "Missing item type",
            "line": " core.js:840"
        },
        {
            "message": "Missing item type",
            "line": " core.js:946"
        },
        {
            "message": "Missing item type\nReturns multiple entities",
            "line": " core.js:979"
        },
        {
            "message": "Missing item type\nCall some functions of the entity ancestors of an entity",
            "line": " core.js:1214"
        },
        {
            "message": "Missing item type\nReturn the array of assets used for the entity",
            "line": " core.js:1355"
        },
        {
            "message": "Missing item type",
            "line": " core.js:1430"
        },
        {
            "message": "Missing item type",
            "line": " core.js:1445"
        },
        {
            "message": "Missing item type\n#.attach",
            "line": " core.js:1461"
        },
        {
            "message": "Missing item type\n#.detach",
            "line": " core.js:1490"
        },
        {
            "message": "Missing item type\n#.origin",
            "line": " core.js:1519"
        },
        {
            "message": "Missing item type\n#.flip",
            "line": " core.js:1567"
        },
        {
            "message": "Missing item type\nams_entity_object : abstract base entity with no visual",
            "line": " core.js:1593"
        },
        {
            "message": "Missing item type",
            "line": " engine.js:7"
        },
        {
            "message": "Missing item type",
            "line": " engine.js:12"
        },
        {
            "message": "Missing item type",
            "line": " engine.js:57"
        },
        {
            "message": "Missing item type",
            "line": " engine.js:259"
        },
        {
            "message": "Missing item type\nMedia support detection\n Function yespix.support(type) return true if the requested audio or video is supported",
            "line": " engine.js:356"
        }
    ]
}